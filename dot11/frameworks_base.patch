From ebe1369c1709e70dbbaddc86c81103005fde7464 Mon Sep 17 00:00:00 2001
From: Albert I <kras@raphielgang.org>
Date: Sat, 20 Mar 2021 05:20:39 +0800
Subject: [PATCH 1/4] Revert "Merge "Revert "Fix merge error and reallow
 adotable and sd storage visibility"" into dot11"

This reverts commit d11403bab37a62e2572a3fccba4bd5dfede5f769, reversing
changes made to af9314f33b1d6c99843c987170e18e7f9ef251e2.

More derps. Reee

Signed-off-by: Albert I <kras@raphielgang.org>
Change-Id: Ia87ee1e8cd31635575414cd872d425b9f6479a65
---
 .../java/com/android/server/StorageManagerService.java | 10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

diff --git a/services/core/java/com/android/server/StorageManagerService.java b/services/core/java/com/android/server/StorageManagerService.java
index 2e438dfbda8..8ac6886a36b 100644
--- a/services/core/java/com/android/server/StorageManagerService.java
+++ b/services/core/java/com/android/server/StorageManagerService.java
@@ -1523,13 +1523,9 @@ class StorageManagerService extends IStorageManager.Stub
                 vol.mountFlags |= VolumeInfo.MOUNT_FLAG_VISIBLE;
             }
 
-            // Set sdcards to visible to apps. If they are visible media is scanned
-            // and they can be used for other stuff.
-            if (vol.disk.isSd()) {
-                vol.mountFlags |= VolumeInfo.MOUNT_FLAG_VISIBLE;
-            } else if (vol.disk.isSd()) {
-                vol.mountFlags |= VolumeInfo.MOUNT_FLAG_VISIBLE;
-            } else if (vol.disk.isSd()) {
+            // Adoptable public disks are visible to apps, since they meet
+            // public API requirement of being in a stable location.
+            if (vol.disk.isAdoptable()) {
                 vol.mountFlags |= VolumeInfo.MOUNT_FLAG_VISIBLE;
             } else if (vol.disk.isSd()) {
                 vol.mountFlags |= VolumeInfo.MOUNT_FLAG_VISIBLE;
-- 
2.30.2


From 5020be0668fe30e565e3d9c94076562815b67c3d Mon Sep 17 00:00:00 2001
From: Han Wang <416810799@qq.com>
Date: Wed, 17 Feb 2021 06:17:04 +0100
Subject: [PATCH 2/4] Install seccomp filter even if selinux is permissive

 * If selinux is permissive, Google decide to disable seccomp
   filter because debug tools like strace needs both them to be
   disabled to work.

 * This is fine for developers, but if one runs selinux permissive
   in production, it will be super easy for a macilious app to gain
   root access on Q+, with newly interoduced ZygotePreload API.

 * Technical details:
   https://github.com/dantmnf/BrokenSandbox
   https://github.com/vvb2060/Magica

Change-Id: I1a1208a0a82d36aeb49820972429d106919d6bce
Signed-off-by: Albert I <kras@raphielgang.org>
---
 core/jni/com_android_internal_os_Zygote.cpp | 16 ----------------
 1 file changed, 16 deletions(-)

diff --git a/core/jni/com_android_internal_os_Zygote.cpp b/core/jni/com_android_internal_os_Zygote.cpp
index 9eede83e21e..be00f6383e5 100644
--- a/core/jni/com_android_internal_os_Zygote.cpp
+++ b/core/jni/com_android_internal_os_Zygote.cpp
@@ -127,8 +127,6 @@ static jclass gZygoteClass;
 static jmethodID gCallPostForkSystemServerHooks;
 static jmethodID gCallPostForkChildHooks;
 
-static bool gIsSecurityEnforced = true;
-
 /**
  * True if the app process is running in its mount namespace.
  */
@@ -632,11 +630,6 @@ static void PreApplicationInit() {
 }
 
 static void SetUpSeccompFilter(uid_t uid, bool is_child_zygote) {
-  if (!gIsSecurityEnforced) {
-    ALOGI("seccomp disabled by setenforce 0");
-    return;
-  }
-
   // Apply system or app filter based on uid.
   if (uid >= AID_APP_START) {
     if (is_child_zygote) {
@@ -2198,11 +2191,6 @@ static void com_android_internal_os_Zygote_nativeAllowFileAcrossFork(
 
 static void com_android_internal_os_Zygote_nativeInstallSeccompUidGidFilter(
         JNIEnv* env, jclass, jint uidGidMin, jint uidGidMax) {
-  if (!gIsSecurityEnforced) {
-    ALOGI("seccomp disabled by setenforce 0");
-    return;
-  }
-
   bool installed = install_setuidgid_seccomp_filter(uidGidMin, uidGidMax);
   if (!installed) {
       RuntimeAbort(env, __LINE__, "Could not install setuid/setgid seccomp filter.");
@@ -2280,10 +2268,6 @@ static void com_android_internal_os_Zygote_nativeInitNativeState(JNIEnv* env, jc
    * Security Initialization
    */
 
-  // security_getenforce is not allowed on app process. Initialize and cache
-  // the value before zygote forks.
-  gIsSecurityEnforced = security_getenforce();
-
   selinux_android_seapp_context_init();
 
   /*
-- 
2.30.2


From a8beb68faaba5704a7f78f7fef7cfc47a9f211d7 Mon Sep 17 00:00:00 2001
From: Chris Crump <chris@cypheros.co>
Date: Sat, 5 Oct 2019 00:13:58 -0400
Subject: [PATCH 3/4] SystemUI: Update keyguard indication margin when fod is
 in use

Decrease the bottom margin when fingerprint in display is active
to avoid obstructing the view

Change-Id: I3f84384b0ea6369d7ba2f16f53c415f5285decea
Signed-off-by: Albert I <kras@raphielgang.org>
---
 .../res/layout/keyguard_bottom_area.xml       |  1 -
 packages/SystemUI/res/values/dot_dimens.xml   |  3 ++
 .../phone/KeyguardBottomAreaView.java         | 46 +++++++++++++++----
 3 files changed, 40 insertions(+), 10 deletions(-)

diff --git a/packages/SystemUI/res/layout/keyguard_bottom_area.xml b/packages/SystemUI/res/layout/keyguard_bottom_area.xml
index 6df2023bcbd..dfbbf72552a 100644
--- a/packages/SystemUI/res/layout/keyguard_bottom_area.xml
+++ b/packages/SystemUI/res/layout/keyguard_bottom_area.xml
@@ -29,7 +29,6 @@
         android:forceHasOverlappingRendering="false"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_marginBottom="@dimen/keyguard_indication_margin_bottom"
         android:layout_gravity="bottom|center_horizontal"
         android:orientation="vertical">
 
diff --git a/packages/SystemUI/res/values/dot_dimens.xml b/packages/SystemUI/res/values/dot_dimens.xml
index 5dc937a3669..da361bfa24f 100644
--- a/packages/SystemUI/res/values/dot_dimens.xml
+++ b/packages/SystemUI/res/values/dot_dimens.xml
@@ -45,4 +45,7 @@
     <dimen name="dismiss_all_fab_src_size">24dp</dimen>
 
     <dimen name="dot_quick_container_spacing">-16dp</dimen>
+
+    <!-- Bottom margin size when fingerprint in display is active -->
+    <dimen name="keyguard_indication_margin_bottom_fingerprint_in_display">@dimen/keyguard_indication_margin_bottom</dimen>
 </resources>
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java
index b47c59acb82..cbab4c6ba6b 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java
@@ -40,6 +40,7 @@ import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
 import android.content.res.Configuration;
 import android.graphics.drawable.Drawable;
+import android.hardware.biometrics.BiometricSourceType;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.IBinder;
@@ -63,6 +64,7 @@ import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import com.android.internal.annotations.VisibleForTesting;
+import com.android.internal.util.custom.Utils;
 import com.android.internal.widget.LockPatternUtils;
 import com.android.keyguard.KeyguardUpdateMonitor;
 import com.android.keyguard.KeyguardUpdateMonitorCallback;
@@ -143,6 +145,7 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
 
     private boolean mUserSetupComplete;
     private boolean mPrewarmBound;
+    private boolean mIsFingerprintRunning;
     private Messenger mPrewarmMessenger;
     private final ServiceConnection mPrewarmConnection = new ServiceConnection() {
 
@@ -168,6 +171,7 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
     private String mLeftButtonStr;
     private boolean mDozing;
     private int mIndicationBottomMargin;
+    private int mIndicationBottomMarginFod;
     private float mDarkAmount;
     private int mBurnInXOffset;
     private int mBurnInYOffset;
@@ -244,6 +248,8 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         mIndicationText = findViewById(R.id.keyguard_indication_text);
         mIndicationBottomMargin = getResources().getDimensionPixelSize(
                 R.dimen.keyguard_indication_margin_bottom);
+        mIndicationBottomMarginFod = getResources().getDimensionPixelSize(
+                R.dimen.keyguard_indication_margin_bottom_fingerprint_in_display);
         mBurnInYOffset = getResources().getDimensionPixelSize(
                 R.dimen.default_burn_in_prevention_offset);
         updateCameraVisibility();
@@ -260,6 +266,7 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         mAccessibilityController = Dependency.get(AccessibilityController.class);
         mActivityIntentHelper = new ActivityIntentHelper(getContext());
         updateLeftAffordance();
+        updateIndicationAreaPadding();
     }
 
     @Override
@@ -307,15 +314,9 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
     @Override
     protected void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
-        mIndicationBottomMargin = getResources().getDimensionPixelSize(
-                R.dimen.keyguard_indication_margin_bottom);
-        mBurnInYOffset = getResources().getDimensionPixelSize(
-                R.dimen.default_burn_in_prevention_offset);
-        MarginLayoutParams mlp = (MarginLayoutParams) mIndicationArea.getLayoutParams();
-        if (mlp.bottomMargin != mIndicationBottomMargin) {
-            mlp.bottomMargin = mIndicationBottomMargin;
-            mIndicationArea.setLayoutParams(mlp);
-        }
+
+        // Update the bottom margin of the indication area
+        updateIndicationAreaPadding();
 
         // Respect font size setting.
         mEnterpriseDisclosure.setTextSize(TypedValue.COMPLEX_UNIT_PX,
@@ -385,6 +386,23 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
                 && mRightButton.getIcon().isVisible ? View.VISIBLE : View.GONE);
     }
 
+    private void updateIndicationAreaPadding() {
+        mIndicationBottomMargin = getResources().getDimensionPixelSize(
+                R.dimen.keyguard_indication_margin_bottom);
+        mIndicationBottomMarginFod = getResources().getDimensionPixelSize(
+                R.dimen.keyguard_indication_margin_bottom_fingerprint_in_display);
+        mBurnInYOffset = getResources().getDimensionPixelSize(
+                R.dimen.default_burn_in_prevention_offset);
+        MarginLayoutParams mlp = (MarginLayoutParams) mIndicationArea.getLayoutParams();
+
+        int bottomMargin = hasInDisplayFingerprint() ? mIndicationBottomMarginFod : mIndicationBottomMargin;
+        boolean newLp = mlp.bottomMargin != bottomMargin;
+        if (newLp) {
+            mlp.bottomMargin = bottomMargin;
+            mIndicationArea.setLayoutParams(mlp);
+        }
+    }
+
     /**
      * Set an alternate icon for the left assist affordance (replace the mic icon)
      */
@@ -407,6 +425,10 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         mLeftAffordanceView.setContentDescription(state.contentDescription);
     }
 
+    private boolean hasInDisplayFingerprint() {
+        return Utils.hasFodSupport(mContext) && mIsFingerprintRunning;
+    }
+
     public boolean isLeftVoiceAssist() {
         return mLeftIsVoiceAssist;
     }
@@ -716,6 +738,12 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
                     updateCameraVisibility();
                     updateLeftAffordance();
                 }
+                @Override
+                public void onBiometricRunningStateChanged(boolean running,
+                            BiometricSourceType biometricSourceType) {
+                    mIsFingerprintRunning = running;
+                    updateIndicationAreaPadding();
+                }
             };
 
     public void updateLeftAffordance() {
-- 
2.30.2


From 77f4a01de580c4bf68e594f4323e21103b619cb1 Mon Sep 17 00:00:00 2001
From: Dil3mm4 <dil3mm4.dev@gmail.com>
Date: Mon, 30 Nov 2020 04:31:41 +0000
Subject: [PATCH 4/4] SystemUI: Don't show FOD icon/pad keyguard if strong auth
 is required

Change-Id: Ie227aee88fea4945a7618fe606c1094ae812ebe0
Signed-off-by: Albert I <kras@raphielgang.org>
---
 .../android/keyguard/KeyguardSecurityContainer.java    |  7 ++++---
 .../com/android/systemui/biometrics/FODCircleView.java | 10 ++++++++++
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/packages/SystemUI/src/com/android/keyguard/KeyguardSecurityContainer.java b/packages/SystemUI/src/com/android/keyguard/KeyguardSecurityContainer.java
index 4a72c4eceff..b2283e54bf9 100644
--- a/packages/SystemUI/src/com/android/keyguard/KeyguardSecurityContainer.java
+++ b/packages/SystemUI/src/com/android/keyguard/KeyguardSecurityContainer.java
@@ -525,9 +525,10 @@ public class KeyguardSecurityContainer extends FrameLayout implements KeyguardSe
 
         // Consume bottom insets because we're setting the padding locally (for IME and navbar.)
         int inset;
-        int minBottomMargin = mHasFod && mUpdateMonitor.isFingerprintDetectionRunning() ?
-                getResources().getDimensionPixelSize(
-                        R.dimen.kg_security_container_min_bottom_margin) : 0;
+        int minBottomMargin = mHasFod && !mUpdateMonitor.userNeedsStrongAuth() &&
+                mUpdateMonitor.isFingerprintDetectionRunning() ?
+                        getResources().getDimensionPixelSize(
+                                R.dimen.kg_security_container_min_bottom_margin) : 0;
 
         if (sNewInsetsMode == NEW_INSETS_MODE_FULL) {
             int bottomInset = insets.getInsetsIgnoringVisibility(systemBars()).bottom;
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
index b8d19392c14..00af5d6c4d2 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
@@ -155,6 +155,11 @@ public class FODCircleView extends ImageView implements TunerService.Tunable {
             new IFingerprintInscreenCallback.Stub() {
         @Override
         public void onFingerDown() {
+            if (mUpdateMonitor.userNeedsStrongAuth()) {
+                // Keyguard requires strong authentication (not biometrics)
+                return;
+            }
+
             if (mFodGestureEnable && !mScreenTurnedOn) {
                 if (mDozeEnabled) {
                     mHandler.post(() -> mContext.sendBroadcast(new Intent(DOZE_INTENT)));
@@ -589,6 +594,11 @@ public class FODCircleView extends ImageView implements TunerService.Tunable {
     }
 
     public void show() {
+        if (mUpdateMonitor.userNeedsStrongAuth()) {
+            // Keyguard requires strong authentication (not biometrics)
+            return;
+        }
+
         if (!mUpdateMonitor.isScreenOn() && !mFodGestureEnable) {
             // Keyguard is shown just after screen turning off
             return;
-- 
2.30.2

